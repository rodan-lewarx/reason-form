// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Fetch from "bs-fetch/src/Fetch.js";
import * as React from "react";
import * as Json_decode from "@glennsl/bs-json/src/Json_decode.bs.js";
import * as UserList$ReactHooksTemplate from "../components/UserList.bs.js";
import * as PageHeading$ReactHooksTemplate from "../components/PageHeading.bs.js";

function ListUsers(Props) {
  var match = React.useState((function () {
          return /* Empty */1;
        }));
  var setUserState = match[1];
  React.useEffect((function () {
          var decodeResults = function (param) {
            return Json_decode.field("users", (function (param) {
                          return Json_decode.list((function (json) {
                                        return /* record */[
                                                /* id */Json_decode.field("id", Json_decode.string, json),
                                                /* email */Json_decode.field("email", Json_decode.string, json),
                                                /* firstName */Json_decode.field("firstName", Json_decode.string, json),
                                                /* lastName */Json_decode.field("lastName", Json_decode.string, json)
                                              ];
                                      }), param);
                        }), param);
          };
          new Promise((function (resolve, reject) {
                            return resolve(Curry._1(setUserState, (function (param) {
                                              return /* Loading */2;
                                            })));
                          })).then((function (param) {
                          return fetch("http://localhost:8000/api/users", Fetch.RequestInit[/* make */0](/* Get */0, {
                                            "Content-Type": "application/json"
                                          }, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* () */0));
                        })).then((function (prim) {
                        return prim.json();
                      })).then((function (json) {
                      return Promise.resolve(decodeResults(json));
                    })).then((function (response) {
                    var match = List.length(response);
                    if (match !== 0) {
                      Curry._1(setUserState, (function (param) {
                              return /* Users */[response];
                            }));
                    } else {
                      Curry._1(setUserState, (function (param) {
                              return /* Empty */1;
                            }));
                    }
                    return Promise.resolve(undefined);
                  })).catch((function (param) {
                  Curry._1(setUserState, (function (param) {
                          return /* Error */0;
                        }));
                  return Promise.resolve(undefined);
                }));
          return undefined;
        }), ([]));
  return React.createElement(React.Fragment, {
              children: null
            }, React.createElement(PageHeading$ReactHooksTemplate.make, {
                  text: "List Users"
                }), React.createElement(UserList$ReactHooksTemplate.make, {
                  userState: match[0]
                }));
}

var make = ListUsers;

export {
  make ,
  
}
/* react Not a pure module */
